#include <avr/io.h>
#include <avr/interrupt.h>


#define SET_BIT(reg,pin) (reg|=(1<<pin))
#define CLEAR_BIT(reg,pin) (reg&=~(1<<pin))
#define TOGGLE_BIT(reg,pin) (reg^=(1<<pin))


volatile int iterations = 0;

int arr [10] = {0b00000010, 0b10011110, 0b00100100, 0b00001100, 0b10011000, 0b01001000, 0b01000000, 0b00011110, 0b00000000, 0b00001000};

int x = 0;

ISR(TIMER2_OVF_vect) {
  Serial.print("Entered");
  iterations++;
  if (iterations == 60) {
    
    if(x == 9) x = 0;
    else x++;
 
    TCNT2 = 132;
    iterations = 0;
  }
}

void timer2_init(){
  // TIMER 2 NORMAL MODE
  CLEAR_BIT(SREG,7);
  
  CLEAR_BIT(TCCR2B,6);
  CLEAR_BIT(TCCR2B,3);
  TCCR2B |= 0x07;     // prescaler
  CLEAR_BIT(TCCR2B,4);
  CLEAR_BIT(TCCR2B,5);
  // initialize counter
  TIMSK2 |= (1<<TOIE2);
  TCNT2 = 132;


  
  
  SET_BIT(SREG,7);
}

int main(void){
  // connect led to pin PC0
  Serial.begin(9600);
  DDRC |= (1 << PC0);
  DDRB |= (1 << PB5);


  DDRD = 0xFF;
  PORTD = arr[0];
  // initialize timer
  timer2_init();
  while(1){
    PORTD = arr[x];
  }
}